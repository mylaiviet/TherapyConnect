# docker-compose.yml for KareMatch
# Local development and testing environment
# Use this to test Docker build before deploying to AWS

version: '3.8'

services:
  # PostgreSQL database (mimics AWS RDS locally)
  postgres:
    image: postgres:15-alpine
    container_name: karematch-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: karematch
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - karematch-network

  # KareMatch application (tests production Docker build)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: karematch-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/karematch
      ENCRYPTION_KEY: test-encryption-key-32-bytes-long-12345
      SESSION_SECRET: test-session-secret-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    networks:
      - karematch-network

volumes:
  postgres_data:
    driver: local

networks:
  karematch-network:
    name: karematch-network
    driver: bridge
